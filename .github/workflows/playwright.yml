name: Playwright Tests

permissions:
  contents: read
  pages: write
  id-token: write

on:
  repository_dispatch:
    types: [run-tests]
  push:
    branches: main
    paths:
      - "tests/**"
  pull_request:
    branches: main
    paths:
      - "tests/**"
      - ".github/workflows/playwright.yml"

env: # Default values overriden by dispatch event
  SLACK_WEBHOOK_URL: "https://hooks.slack.com/services/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"

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Build slack message
        id: slack-start-message-builder
        run: echo "payload=$(npx @empiricalrun/reporter@0.1.1 start flash ${{ github.run_id }})" >> $GITHUB_OUTPUT
      - name: Slack alert on start
        uses: slackapi/slack-github-action@v1.26.0
        continue-on-error: true
        with:
          payload: ${{ steps.slack-start-message-builder.outputs.payload }}
        env:
          SLACK_WEBHOOK_URL: ${{ env.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npm run install:browsers
      - name: Get PR labels
        id: pr-labels
        uses: joerick/pr-labels-action@v1.0.8
      - name: Extract test name
        id: extract_test_name
        if: contains(steps.pr-labels.outputs.labels, 'automated')
        run: |
          echo "test_name=$(echo ${PR_TITLE#test: })" >> $GITHUB_OUTPUT
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}
      - name: Run Playwright tests for added test
        if: ${{steps.extract_test_name.outputs.test_name}}
        run: npx playwright test -g "$TEST_NAME"
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          TEST_NAME: ${{ steps.extract_test_name.outputs.test_name }}
      - name: Check if test ran already
        if: always()
        id: check_if_test_ran
        run: |
          DIRECTORY="playwright-report"
          if [ -d "$DIRECTORY" ]; then
            echo "test_ran=true" >> "$GITHUB_OUTPUT"
          else
            echo "test_ran=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Run Playwright tests
        if: steps.check_if_test_ran.outputs.test_ran != 'true'
        run: npm test
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      - uses: empirical-run/r2-upload-action@master
        if: always()
        with:
          r2-account-id: ${{ secrets.R2_ACCOUNT_ID }}
          r2-access-key-id: ${{ secrets.R2_ACCESS_KEY_ID }}
          r2-secret-access-key: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          r2-bucket: ${{ secrets.R2_BUCKET }}
          source-dir: ./playwright-report/
          destination-dir: ./flash/${{ github.run_id }}/
      - name: Share report link to CI summary
        if: always()
        run: |
          echo "### Test report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
          echo "https://reports.empirical.run/flash/${{ github.run_id }}/index.html" >> $GITHUB_STEP_SUMMARY
      - name: Build slack message from results
        if: always()
        id: slack-end-message-builder
        run: echo "payload=$(npx @empiricalrun/reporter@0.1.1 end flash ${{ github.run_id }})" >> $GITHUB_OUTPUT
      - name: Send slack alert on end
        if: always()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: ${{ steps.slack-end-message-builder.outputs.payload }}
        env:
          SLACK_WEBHOOK_URL: ${{ env.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
